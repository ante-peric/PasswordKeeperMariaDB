#! /bin/bash
#Vol 1

########################################################################
# 1. Inicijalni admin korisnik se dodaje ručno u bazu podataka         #
# 2. Administrator Podaci                                              #
#administrator=ante                                                    # 
#administrator_password=ante00810820                                   #
#3. Način dodavanja                                                    #
# Dodaje se u dvije tablice baze podataka pk_cluster                   #
# Tablica administrator:                                               #
# administrator                                                        #
# administrator_password                                               #
#Tablica korisnici													   #	
# admin 															   #
# admin_password                                                       # 
########################################################################



check_prerequisite(){
#Variables

db_pass="Ante@peric00810820"
db_user="ante"
db1="192.168.0.217"
db2="192.168.0.218"
db3="192.168.0.219"

#Test for database conn
test_db_1=$(mysqladmin --host="$db1" --user="$db_user" --password="$db_pass" ping 2> /dev/null) 
test_db_2=$(mysqladmin --host="$db2" --user="$db_user" --password="$db_pass" ping 2> /dev/null)
test_db_3=$(mysqladmin --host="$db3" --user="$db_user" --password="$db_pass" ping 2> /dev/null)


if [ "$test_db_1" == "mysqld is alive" ]; then
login_1
else
if [ "$test_db_2" == "mysqld is alive" ]; then
login_2
else
if [ "$test_db_3" == "mysqld is alive" ]; then
login_3
else
echo "$(tput setaf 1)Error: Cluster Is Dead - Please Contact Your Administrator$(tput sgr 0)"
sleep 3
exit 0
fi
fi
fi 
}


login_1(){

clear
counter=1
for i in {1..3}
do

echo ""

COLUMNS=$(tput cols)
title="$(tput setaf 6)CaksSonicDeveloper$(tput sgr 0)"
printf "%*s\n" $(((${#title}+$COLUMNS)/2)) "$title"
echo ""
title_1="$(tput setaf 6) PASSWORD KEEPER - LOGIN MENU$(tput sgr 0)"
printf "%*s\n" $(((${#title_1}+$COLUMNS)/2)) "$title_1"
echo ""
title_2="$(tput setaf 2)Welcome $USER$(tput sgr 0)"
printf "%*s\n" $(((${#title_2}+$COLUMNS)/2)) "$title_2"
echo ""
echo "$(tput setaf 2)Please Insert Your Credientials:$(tput sgr 0) "
echo ""
read -p  "Enter User Name: " name
echo ""
read -s -p "Enter password: " password
echo ""
echo ""
echo ""

if [[ -z "$name" ]] || [[ -z "$password" ]]; then
echo "$(tput setaf 1)WARNNING: Blank User Name or Password Not Alllowed - Attempt $counter/3$(tput sgr 0)"
counter=$((counter + 1))
sleep 2
clear 
else


cat << _EOF_

 ____________
|            |
| $(tput setaf 1)[1]$(tput sgr 0) LOGIN  |
|            |
| $(tput setaf 1)[0]$(tput sgr 0) QUIT   |
|____________|

_EOF_


echo ""
read -p "Enter selection [0 - 1] > "
echo ""

if [[ $REPLY =~ ^[0-1]$ ]];then
case $REPLY in

1)
test_1=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT administrator from administrator 
where administrator='$name'
AND administrator_password='$password'
;" pk_cluster)

test_2=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT administrator_password from administrator
where administrator_password='$password' 
AND administrator='$name';" pk_cluster)

test_3=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT admin from korisnici 
where admin='$name'
AND admin_password='$password';" pk_cluster)

test_4=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT admin_password from korisnici 
where admin_password='$password'
AND admin='$name';" pk_cluster)


test_5=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ " 
SELECT korisnik FROM korisnici
where korisnik='$name'
AND zaporka='$password';" pk_cluster)

test_6=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ " 
SELECT zaporka FROM korisnici
where zaporka='$password'
AND korisnik='$name';" pk_cluster)

admin_id=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT administrator.id FROM administrator WHERE administrator='$name';" pk_cluster)

admin=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT administrator FROM administrator WHERE administrator='$name';" pk_cluster)

admin_password=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT administrator_password FROM administrator WHERE administrator='$name';" pk_cluster)

global_database="192.168.0.217" 

log_in=$(date +"%Y-%m-%d %H:%M:%S")
trenutno_vrijeme=$(date +"%d-%m-%Y %H:%M:%S")
current_ip=$(hostname -i)
fk_admin_admin=1
#fk_admin_user=0
fk_racuni_admin=1
#fk_racuni_user=0

 

if grep -wq "$name" <<< "$test_1" && grep -wq "$name" <<< "$test_3" && grep -wq "$password" <<< "$test_2" && grep -wq "$password" <<< "$test_4"; then
mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e "
INSERT INTO admin_log (id_admin, admin, log_in, ip_address, db_cluster)
VALUES
($admin_id, '$admin', '$log_in', '$current_ip', '$global_database' );" pk_cluster

current_log_session_id=$(mysql -Sn -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
SELECT MAX(id) AS '' FROM admin_log;" pk_cluster)

admin_area_main

elif grep -wq "$name" <<< "$test_5" && grep -wq "$password" <<< "$test_6"; then 
user_area_main
else
echo "$(tput setaf 1)WARNNING: Incorrect User Name Or Password - - Attempt $counter/3$(tput sgr 0)"
counter=$((counter + 1))
sleep 3
clear
fi

;;

0)
echo "$(tput setaf 1)Program Terminated$(tput sgr 0)"
exit 0
esac
else
echo "$(tput setaf 1)Invalid Entry$(tput sgr 0)"
sleep 3
clear
fi
fi

done
echo ""
echo "$(tput setaf 1)Error: You Insert Wrong Credentials - Please Restart Application$(tput sgr 0)" 
sleep 2
exit 0
}



login_2(){
	clear
	
counter=1
for i in {1..3}
do
echo ""

COLUMNS=$(tput cols)
title="$(tput setaf 6)CaksSonicDeveloper$(tput sgr 0)"
printf "%*s\n" $(((${#title}+$COLUMNS)/2)) "$title"
echo ""
title_1="$(tput setaf 6) PASSWORD KEEPER - LOGIN MENU$(tput sgr 0)"
printf "%*s\n" $(((${#title_1}+$COLUMNS)/2)) "$title_1"
echo ""
title_2="$(tput setaf 2)Welcome $USER$(tput sgr 0)"
printf "%*s\n" $(((${#title_2}+$COLUMNS)/2)) "$title_2"

echo ""

echo "$(tput setaf 2)Please Insert Your Credientials:$(tput sgr 0) "
echo ""
read -p  "Enter User Name: " name
echo ""
read -s -p "Enter password: " password
echo ""
echo ""
echo ""

if [[ -z "$name" ]] || [[ -z "$password" ]]; then
echo "$(tput setaf 1)WARNNING: Blank User Name or Password Not Alllowed - Attempt $counter/3$(tput sgr 0)"
counter=$((counter + 1))
sleep 2
clear 
else


cat << _EOF_

 ____________
|            |
| $(tput setaf 1)[1]$(tput sgr 0) LOGIN  |
|            |
| $(tput setaf 1)[0]$(tput sgr 0) QUIT   |
|____________|

_EOF_


echo ""
read -p "Enter selection [0 - 1] > "
echo ""

if [[ $REPLY =~ ^[0-1]$ ]];then
case $REPLY in

1)
test_1=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT administrator from administrator 
where administrator='$name'
AND administrator_password='$password'
;" pk_cluster)

test_2=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT administrator_password from administrator
where administrator_password='$password' 
AND administrator='$name';" pk_cluster)

test_3=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT admin from korisnici 
where admin='$name'
AND admin_password='$password';" pk_cluster)

test_4=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT admin_password from korisnici 
where admin_password='$password'
AND admin='$name';" pk_cluster)


test_5=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ " 
SELECT korisnik FROM korisnici
where korisnik='$name'
AND zaporka='$password';" pk_cluster)

test_6=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ " 
SELECT zaporka FROM korisnici
where zaporka='$password'
AND korisnik='$name';" pk_cluster)

admin_id=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db2" -P 3306 -e \ "
SELECT administrator.id FROM administrator WHERE administrator='$name';" pk_cluster)
 
admin=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db2" -P 3306 -e \ "
SELECT administrator FROM administrator WHERE administrator='$name';" pk_cluster) 
 
admin_password=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db2" -P 3306 -e \ "
SELECT administrator_password FROM administrator WHERE administrator='$name';" pk_cluster) 
 
global_database="192.168.0.218"
log_in=$(date +"%Y-%m-%d %H:%M:%S")
trenutno_vrijeme=$(date +"%d-%m-%Y %H:%M:%S")
current_ip=$(hostname -i)
fk_admin_admin=1
#fk_admin_user=0
fk_racuni_admin=1
#fk_racuni_user=0
 
 if grep -wq "$name" <<< "$test_1" && grep -wq "$name" <<< "$test_3" && grep -wq "$password" <<< "$test_2" && grep -wq "$password" <<< "$test_4"; then

mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e "
INSERT INTO admin_log (id_admin, admin, log_in, ip_address, db_cluster)
VALUES
($admin_id, '$admin', '$log_in', '$current_ip', '$global_database' );" pk_cluster

current_log_session_id=$(mysql -Sn -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
SELECT MAX(id) AS '' FROM admin_log;" pk_cluster)

admin_area_main

elif grep -wq "$name" <<< "$test_5" && grep -wq "$password" <<< "$test_6"; then 

user_area_main
else
echo "$(tput setaf 1)WARNNING: Incorrect User Name Or Password - - Attempt $counter/3$(tput sgr 0)"
counter=$((counter + 1))
sleep 3
clear
fi



;;

0)
echo "$(tput setaf 1)Program Terminated$(tput sgr 0)"
exit 0
esac
else
echo "$(tput setaf 1)Invalid Entry$(tput sgr 0)"
sleep 3
clear
fi
fi

done
echo ""
echo "$(tput setaf 1)Error: You Insert Wrong Credentials - Please Restart Application$(tput sgr 0)" 
sleep 2
exit 0
}

login_3(){
	clear
counter=1
for i in {1..3}
do
echo ""

COLUMNS=$(tput cols)
title="$(tput setaf 6)CaksSonicDeveloper$(tput sgr 0)"
printf "%*s\n" $(((${#title}+$COLUMNS)/2)) "$title"
echo ""
title_1="$(tput setaf 6) PASSWORD KEEPER - LOGIN MENU$(tput sgr 0)"
printf "%*s\n" $(((${#title_1}+$COLUMNS)/2)) "$title_1"
echo ""
title_2="$(tput setaf 2)Welcome $USER$(tput sgr 0)"
printf "%*s\n" $(((${#title_2}+$COLUMNS)/2)) "$title_2"

echo ""

echo "$(tput setaf 2)Please Insert Your Credientials:$(tput sgr 0) "
echo ""
read -p  "Enter User Name: " name
echo ""
read -s -p "Enter password: " password
echo ""
echo ""
echo ""

if [[ -z "$name" ]] || [[ -z "$password" ]]; then
echo "$(tput setaf 1)WARNNING: Blank User Name or Password Not Alllowed - Attempt $counter/3$(tput sgr 0)"
counter=$((counter + 1))
sleep 2
clear 
else


cat << _EOF_

 ____________
|            |
| $(tput setaf 1)[1]$(tput sgr 0) Login  |
|            |
| $(tput setaf 1)[0]$(tput sgr 0) Quit   |
|____________|

_EOF_


echo ""
read -p "Enter selection [0 - 1] > "
echo ""

if [[ $REPLY =~ ^[0-1]$ ]];then
case $REPLY in

1)
test_1=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT administrator from administrator 
where administrator='$name'
AND administrator_password='$password'
;" pk_cluster)

test_2=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT administrator_password from administrator
where administrator_password='$password' 
AND administrator='$name';" pk_cluster)

test_3=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT admin from korisnici 
where admin='$name'
AND admin_password='$password';" pk_cluster)

test_4=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT admin_password from korisnici 
where admin_password='$password'
AND admin='$name';" pk_cluster)

test_5=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ " 
SELECT korisnik FROM korisnici
where korisnik='$name'
AND zaporka='$password';" pk_cluster)

test_6=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ " 
SELECT zaporka FROM korisnici
where zaporka='$password'
AND korisnik='$name';" pk_cluster)

admin_id=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db3" -P 3306 -e \ "
SELECT administrator.id FROM administrator WHERE administrator='$name';" pk_cluster)
 
admin=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db3" -P 3306 -e \ "
SELECT administrator FROM administrator WHERE administrator='$name';" pk_cluster) 

admin_password=$(mysql -sN -u "$db_user" -p"$db_pass" -h "$db3" -P 3306 -e \ "
SELECT administrator_password FROM administrator WHERE administrator='$name';" pk_cluster)
 
global_database="192.168.0.219"
log_in=$(date +"%Y-%m-%d %H:%M:%S")
trenutno_vrijeme=$(date +"%d-%m-%Y %H:%M:%S")
current_ip=$(hostname -i)
fk_admin_admin=1
#fk_admin_user=0
fk_racuni_admin=1
#fk_racuni_user=0
 
if grep -wq "$name" <<< "$test_1" && grep -wq "$name" <<< "$test_3" && grep -wq "$password" <<< "$test_2" && grep -wq "$password" <<< "$test_4"; then

mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e "
INSERT INTO admin_log (id_admin, admin, log_in, ip_address, db_cluster)
VALUES
($admin_id, '$admin', '$log_in', '$current_ip', '$global_database' );" pk_cluster

current_log_session_id=$(mysql -Sn -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
SELECT MAX(id) AS '' FROM admin_log;" pk_cluster)

admin_area_main

elif grep -wq "$name" <<< "$test_5" && grep -wq "$password" <<< "$test_6"; then 
user_area_main
else
echo "$(tput setaf 1)WARNNING: Incorrect User Name Or Password - - Attempt $counter/3$(tput sgr 0)"
counter=$((counter + 1))
sleep 3
clear
fi
;;

0)
echo "$(tput setaf 1)Program Terminated$(tput sgr 0)"
exit 0
esac
else
echo "$(tput setaf 1)Invalid Entry$(tput sgr 0)"
sleep 3
clear
fi
fi
done
echo ""
echo "$(tput setaf 1)Error: You Insert Wrong Credentials - Please Restart Application$(tput sgr 0)" 
sleep 2
exit 0
}

admin_area_main(){
clear
echo ""
while true; do
clear
COLUMNS=$(tput cols)
title="$(tput setaf 6)CaksSonicDeveloper$(tput sgr 0)"
printf "%*s\n" $(((${#title}+$COLUMNS)/2)) "$title"
echo ""
title_1="$(tput setaf 6) PASSWORD KEEPER - ADMINISTRATOR MAIN MENU$(tput sgr 0)"
printf "%*s\n" $(((${#title_1}+$COLUMNS)/2)) "$title_1"
echo ""

#log_in=$(date +"%Y-%m-%d %H:%M:%S")
#trenutno_vrijeme=$(date +"%d-%m-%Y %H:%M:%S")
#current_ip=$(hostname -i)
#fk_admin_admin=1
#fk_admin_user=0
#fk_racuni_admin=1
#fk_racuni_user=0


cat << _EOF_
LOGIN DETAILS:                                      
_EOF_
echo ""
#echo "$(tput setaf 6)Login Time:$(tput sgr 0)        $(tput setaf 1)$trenutno_vrijeme$(tput sgr 0) "
#echo "$(tput setaf 6)Your ID:$(tput sgr 0)           $(tput setaf 1)$admin_id$(tput sgr 0) "
echo "$(tput setaf 6)Your User Name:$(tput sgr 0)    $(tput setaf 1)$admin$(tput sgr 0) "
#echo "$(tput setaf 6)Your Password:$(tput sgr 0)     $(tput setaf 1)$admin_password$(tput sgr 0)  "
#echo "$(tput setaf 6)Your IP Address:$(tput sgr 0)   $(tput setaf 1)$current_ip$(tput sgr 0)  "
#echo "$(tput setaf 6)Your Are Using:$(tput sgr 0)    $(tput setaf 1)$global_database$(tput sgr 0) "
#echo "$(tput setaf 6)FK ADMIN ADMIN:$(tput sgr 0)    $(tput setaf 1)$fk_admin_admin$(tput sgr 0) "
#echo "$(tput setaf 6)FK RACUNI ADMIN:$(tput sgr 0)   $(tput setaf 1)$fk_racuni_admin$(tput sgr 0) "
#echo "Your current session: $current_log_session_id"





cat << _EOF_

Please Select:
 __________________________
|                          | 
| $(tput setaf 1)[1]$(tput sgr 0) Admin Area   |       |
|                  |       |
| $(tput setaf 1)[2]$(tput sgr 0) User Area    |       |
|__________________________|

0. $(tput setaf 1)Quit$(tput sgr 0)
_EOF_


echo ""
read -p "Enter Selection: [0-2] > "
echo ""
if [[ $REPLY =~ ^[0-2]$ ]]; then
case $REPLY in
1)
admin_area
return
;;

2)
user_area_main
return
;;

0)
echo "$(tput setaf 1)Program Terminated$(tput sgr 0)"
sleep 2
mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
UPDATE admin_log SET  log_out = CURRENT_TIMESTAMP WHERE id = $current_log_session_id;" pk_cluster



exit 0
esac
else
echo "$(tput setaf 1)Invalid Entry$(tput sgr 0)"
sleep 2
fi
done




}

admin_area(){
while true; do
clear
COLUMNS=$(tput cols)
title="$(tput setaf 6)CaksSonicDeveloper$(tput sgr 0)"
printf "%*s\n" $(((${#title}+$COLUMNS)/2)) "$title"
echo ""
title_1="$(tput setaf 6) PASSWORD KEEPER - ADMINISTRATOR  MENU$(tput sgr 0)"
printf "%*s\n" $(((${#title_1}+$COLUMNS)/2)) "$title_1"
echo ""

cat << _EOF_

Please Select:
 ______________________________________________________________________
|                                     |                                |  
| $(tput setaf 1)[1]$(tput sgr 0) List All Admin's                | $(tput setaf 1)[4]$(tput sgr 0) Search                     |
|                                     |                                |
| $(tput setaf 1)[2]$(tput sgr 0) Change Admin User Name/Password | $(tput setaf 1)[5]$(tput sgr 0) Return To Admin Main Menu  |
|                                     |                                |
| $(tput setaf 1)[3]$(tput sgr 0) Add/Remove Admin Account        |                                |
|                                     |                                |
|_____________________________________|________________________________|

0. $(tput setaf 1)Quit$(tput sgr 0) 
_EOF_
echo ""
read -p "Enter selection: [0-5] > "
echo ""

if [[ $REPLY =~ ^[0-5]$ ]]; then
case $REPLY in

1)
clear
COLUMNS=$(tput cols)
title="$(tput setaf 6)CaksSonicDeveloper$(tput sgr 0)"
printf "%*s\n" $(((${#title}+$COLUMNS)/2)) "$title"
echo ""
title_1="$(tput setaf 6) PASSWORD KEEPER - LIST ALL ADMIN's$(tput sgr 0)"
printf "%*s\n" $(((${#title_1}+$COLUMNS)/2)) "$title_1"
echo ""


admin_user_exist=$(mysql -Ns -u "$db_user" -p"$db_pass" -h $global_database -P 3306 -e \ "
SELECT (SELECT COUNT(*)
FROM administrator WHERE administrator='$new_admin')
+
(SELECT COUNT(*) FROM korisnici WHERE korisnik='$new_admin') AS total;" pk_cluster)

title_2="$(tput setaf 6) MAX NUMBER OF ADMIN IS: $(tput sgr 0) $(tput setaf 1)7$(tput sgr 0) $(tput setaf 6)- CURRENT NUMBER:$(tput sgr 0)"
printf "%*s\n" $(((${#title_2}+$COLUMNS)/2)) "$title_2"
echo ""

echo ""


list_all_admin=$(mysql --table -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
SELECT id AS 'ID', administrator AS 'Administrator', administrator_password AS 'Password'
FROM administrator
WHERE administrator_password !=''
" pk_cluster)


echo "$(tput setaf 2)$list_all_admin$(tput sgr 0)"
echo ""
read  -t 600 -n 1 -r -s -p $'Press Any Key To Continue ....\n'
;;
2)
change_admin
return
;;

3)
add_remove_admin
return
;;

4)
echo "Search"
sleep 3
continue
;;

5)
admin_area_main
return
;;
0)
echo "$(tput setaf 1)Program Terminated$(tput sgr 0) "
sleep 3
mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
UPDATE admin_log SET  log_out = CURRENT_TIMESTAMP WHERE id = $current_log_session_id;" pk_cluster
exit 0
esac
else
echo "$(tput setaf 1)Invalid Entry$(tput sgr 0) "
sleep 2
fi
done
}

add_remove_admin(){
while true; do
clear
COLUMNS=$(tput cols)
title="$(tput setaf 6)CaksSonicDeveloper$(tput sgr 0)"
printf "%*s\n" $(((${#title}+$COLUMNS)/2)) "$title"
echo ""
title_1="$(tput setaf 6) PASSWORD KEEPER - ADMINISTRATOR  MENU$(tput sgr 0)"
printf "%*s\n" $(((${#title_1}+$COLUMNS)/2)) "$title_1"
echo ""
cat << _EOF_
Please Select: 
 __________________________________________________________
|                           |                              |
| $(tput setaf 1)[1]$(tput sgr 0) Add New Admin Account | $(tput setaf 1)[3]$(tput sgr 0) Return To Admin Menu     |
|                           |                              |
| $(tput setaf 1)[2]$(tput sgr 0) Remove Admin Account  | $(tput setaf 1)[4]$(tput sgr 0) Return To Admin Main Menu|
|                           |                              |
|___________________________|______________________________|

0. $(tput setaf 1)Quit$(tput sgr 0)

_EOF_
echo ""
read -p "Enter Selection [0-4] > "
echo ""
if [[ $REPLY =~ ^[0-4]$ ]]; then
case $REPLY in

1)
while true; do
clear
COLUMNS=$(tput cols)
title="$(tput setaf 6)CaksSonicDeveloper$(tput sgr 0)"
printf "%*s\n" $(((${#title}+$COLUMNS)/2)) "$title"
echo ""
title_1="$(tput setaf 6) PASSWORD KEEPER - ADD NEW ADMIN ACCOUNT$(tput sgr 0)"
printf "%*s\n" $(((${#title_1}+$COLUMNS)/2)) "$title_1"
echo ""
read -p "Please Enter User Name: " new_admin
echo ""
read  -s -p "Please Enter Password: " new_admin_pass_1
echo ""
echo ""
read -s -p "Please Re Enter Password: " new_admin_pass_2
echo ""

if [[ -z "$new_admin" ]] || [[ -z "$new_admin_pass_1" ]]; then
echo ""
echo -e  "$(tput setaf 1)\nWarnning: Please Enter Username/Password$(tput sgr0)"
echo ""
read  -t 60 -n 1 -r -s -p $'Press Any Key To Continue ....\n'
echo ""
add_remove_admin
elif [[ "$new_admin_pass_1" != "$new_admin_pass_2" ]]; then
echo ""
echo -e  "$(tput setaf 1)\nWarnning: Password Does Not Match - Please Enter Correct Password$(tput sgr0)"
echo ""
read  -t 60 -n 1 -r -s -p $'Press Any Key To Continue ....\n'
add_remove_admin
else

####################################################
#za max dozvoljen broj administratora
ukupan_dozvoljen_broj=7
admin_ukupan_broj=$(mysql -Ns -u "$db_user" -p"$db_pass" -h "$db1" -P 3306 -e \ "
SELECT COUNT(*) AS '' FROM administrator;" pk_cluster)

if [[ "$admin_ukupan_broj" -eq "$ukupan_dozvoljen_broj" ]]; then
echo ""
echo "$(tput setaf 1)Important Warnning: You Have Reached Maximum Number Of Admin Accounts: 7$(tput sgr0)"
echo ""
read  -t 60 -n 1 -r -s -p $'Press Any Key To Continue ....\n'
admin_area
fi
###################################################



#Brojimo korisnike iz tablice administrator & korisnici i ako ih ima 1 znaci zauzeto
admin_user_exist=$(mysql -Ns -u "$db_user" -p"$db_pass" -h $global_database -P 3306 -e \ "
SELECT (SELECT COUNT(*)
FROM administrator WHERE administrator='$new_admin')
+
(SELECT COUNT(*) FROM korisnici WHERE korisnik='$new_admin') AS total;" pk_cluster)

admin_user_exist_1=0
fk_racuni_admin=1
korisnik=""
zaporka=""
if [ "$admin_user_exist" -eq "$admin_user_exist_1" ]; then
mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
BEGIN;
INSERT INTO administrator (administrator, administrator_password, from_ip, add_from_user, db_cluster, fk_racuni)
VALUES ('$new_admin', '$new_admin_pass_1', '$current_ip', '$admin', '$global_database', '$fk_racuni_admin');
INSERT INTO korisnici (korisnik, zaporka, admin, admin_password,  fk_racuni, from_ip, add_from_user, db_cluster)
VALUES ('', '', '$new_admin', '$new_admin_pass_1', '$fk_racuni_admin', '$current_ip', '$admin', '$global_database');
COMMIT;" pk_cluster
echo ""


echo "$(tput setaf 2)New Administrator Account Added$(tput sgr0)"
echo ""
echo "$(tput setaf 2)New Admin Account:$(tput sgr0) $(tput setaf 1)$new_admin$(tput sgr0)"
echo ""
echo "$(tput setaf 2)New Admin Password:$(tput sgr0) $(tput setaf 1)$new_admin_pass_1$(tput sgr0)"
echo ""
echo ""
read  -t 600 -n 1 -r -s -p $'Press Any Key To Continue ....\n'
add_remove_admin
else
echo ""
echo "$(tput setaf 1)Warnning: User Name For New Admin Is Taken - Please Use Different User Name$(tput sgr0)"
echo ""
read  -t 60 -n 1 -r -s -p $'Press Any Key To Continue ....\n'
break
fi
fi
done
;;

2)
while true; do
clear
COLUMNS=$(tput cols)
title="$(tput setaf 6)CaksSonicDeveloper$(tput sgr 0)"
printf "%*s\n" $(((${#title}+$COLUMNS)/2)) "$title"
echo ""
title_1="$(tput setaf 6) PASSWORD KEEPER - ADD NEW ADMIN ACCOUNT$(tput sgr 0)"
printf "%*s\n" $(((${#title_1}+$COLUMNS)/2)) "$title_1"
echo ""
echo ""
read -p "Please Enter Admin Name: " delete_admin
echo ""

if [[ -z "$delete_admin" ]]; then
echo "$(tput setaf 1)Warnning: Please Insert Admin Name$(tput sgr 0)"
sleep 3
add_remove_admin
else


#Provjera da li postoji izabrani admiistrator za brisanje
del_admin_admin=$(mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
SELECT administrator FROM administrator WHERE administrator='$delete_admin';" pk_cluster)
#echo "$del_admin_admin"

if [[ "$del_admin_admin" == "" ]]; then
echo "$(tput setaf 1)Warning: Selected Admin Account Does Not Exist$(tput sgr 0)"
sleep 4
add_remove_admin
else
#Prvo Dodajemo informacije brisanog administratora iz baze korisnici u bazu: deleted_admin, za arhivu
mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
INSERT INTO deleted_admin (admin, admin_password, fk_racuni, add_date, from_ip, add_from_user, db_cluster, deleted_by, deleted_ip)
SELECT admin, admin_password, fk_racuni, add_date, from_ip, add_from_user, db_cluster, '$admin', '$current_ip'
FROM korisnici
WHERE admin='$delete_admin';" pk_cluster
sleep 1
#Drugo brišemo izabranog adinistratora
mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
DELETE administrator, korisnici
FROM administrator
INNER JOIN korisnici
ON administrator.administrator=korisnici.admin
WHERE administrator.administrator='$delete_admin';" pk_cluster

echo "$(tput setaf 1)Admin Account Deleted$(tput sgr 0)"
sleep 2
add_remove_admin
fi
fi
done
return
;;
3)
admin_area
return
;;
4)
admin_area_main
return
;;
0)
echo "$(tput setaf 1)Program Terminated$(tput sgr 0)"
sleep 3
mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
UPDATE admin_log SET  log_out = CURRENT_TIMESTAMP WHERE id = $current_log_session_id;" pk_cluster
exit 0
esac
else
echo "$(tput setaf 1)Invalid Entry$(tput sgr 0)"
sleep 2
fi
done
}
change_admin(){

while true; do

clear
COLUMNS=$(tput cols)
title="$(tput setaf 6)CaksSonicDeveloper$(tput sgr 0)"
printf "%*s\n" $(((${#title}+$COLUMNS)/2)) "$title"
echo ""
title_1="$(tput setaf 6) PASSWORD KEEPER - CHANGE ACCOUNT$(tput sgr 0)"
printf "%*s\n" $(((${#title_1}+$COLUMNS)/2)) "$title_1"
echo ""
echo ""

changed_user_name="User Name"
changed_password="Password"
changed_all="User Name & Password"
cat << _EOF_ 

Please Select:
 ___________________________________________________________________
|                                       |                           |
| $(tput setaf 1)[1]$(tput sgr 0) Change Admin User Name            | $(tput setaf 1)[4]$(tput sgr 0) Return To Admin Menu  |
|                                       |                           |
| $(tput setaf 1)[2]$(tput sgr 0) Change Admin Password             | $(tput setaf 1)[5]$(tput sgr 0) Return To Main Menu   |
|                                       |                           |
| $(tput setaf 1)[3]$(tput sgr 0) Change Admin User Name & Password |                                                       |
|_______________________________________|___________________________|

0. $(tput setaf 1)Quit$(tput sgr 0)
_EOF_
echo ""
read -p "Enter Selection [0-5] > "
echo ""

if [[ $REPLY =~ ^[0-5]$ ]]; then
case $REPLY in
1)
clear
echo ""
read -p "Please Enter Admin User Name For Change: " ch_admin

if [[ "$admin" == "$ch_admin" ]]; then
echo ""
echo "$(tput setaf 1)Warnning: You Can Not Perform This Action - Please Use Different Admin Account$(tput sgr 0)"
sleep 3
change_admin
fi

echo ""
if [[ -z "$ch_admin" ]]; then
echo "$(tput setaf 1)Warnning: Please  Insert User Name$(tput sgr 0)"
sleep 3
change_admin
else
#Provjera da li postoji izabrani admiistrator za update
ch_admin_admin=$(mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
SELECT administrator FROM administrator WHERE administrator='$ch_admin';" pk_cluster)

#echo "$del_admin_admin"
if [[ "$ch_admin_admin" == "" ]]; then
echo "$(tput setaf 1)Warning: Selected Admin Account Does Not Exist $(tput sgr 0)"
sleep 4
change_admin 



else
echo ""


read -p "Please Enter New Admin User Name: " ch_admin_new

if [[ -z "$ch_admin_new" ]]; then
echo ""
echo "$(tput setaf 1)Warning: New Admin User Name Can Not Be Empty$(tput sgr 0)"
echo ""
sleep 4
change_admin 
else
#Prvo Dodajemo informacije azuriranog administratora iz baze korisnici u bazu: changed_admin, za arhivu
mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
INSERT INTO changed_admin (admin, admin_password, changed_what,in_to_user,  fk_racuni, add_date, from_ip, add_from_user, db_cluster, changed_by, changed_ip, changed_db_cluster)
SELECT admin, admin_password, '$changed_user_name' , '$ch_admin_new' , fk_racuni, add_date, from_ip, add_from_user, db_cluster, '$admin', '$current_ip', '$global_database'
FROM korisnici
WHERE admin='$ch_admin';" pk_cluster
sleep 1
mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
UPDATE administrator
INNER JOIN korisnici ON (administrator.administrator = korisnici.admin)
SET administrator.administrator = '$ch_admin_new', korisnici.admin = '$ch_admin_new', administrator.last_update = CURRENT_TIMESTAMP, korisnici.last_update = CURRENT_TIMESTAMP
WHERE administrator.administrator = '$ch_admin' AND korisnici.admin = '$ch_admin';" pk_cluster
echo ""
echo "Success: New User Name Is: $ch_admin_new"
sleep 3
change_admin
fi
fi
fi
return
;;


2)
clear
echo ""
read -p "Please Enter Admin User Name: " ch_admin_user
echo ""
if [[ "$admin" == "$ch_admin_user" ]]; then
echo ""
echo "$(tput setaf 1)Warnning: You Can Not Perform This Action - Please Use Different Admin Account$(tput sgr 0)"
sleep 3
change_admin
fi


if [[ -z "$ch_admin_user" ]]; then
echo "$(tput setaf 1)Warnning: Please  Insert User Name$(tput sgr 0)"
sleep 3
change_admin
else
#Provjera da li postoji izabrani admiistrator za update
ch_admin_admin_1=$(mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
SELECT administrator FROM administrator WHERE administrator='$ch_admin_user';" pk_cluster)
if [[ "$ch_admin_admin_1" == "" ]]; then
echo "$(tput setaf 1)Warning: Selected Admin Account Does Not Exist$(tput sgr 0)"
sleep 4
change_admin
else
echo ""
read -p "Please Enter New Admin Password: " ch_admin_new_pass

if [[ -z "$ch_admin_new_pass" ]]; then
echo ""
echo "$(tput setaf 1)Warning: Empty Password Not Allowed$(tput sgr 0)"
sleep 3
change_admin
else

#Prvo Dodajemo informacije azuriranog administratora iz baze korisnici u bazu: changed_admin, za arhivu
mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
INSERT INTO changed_admin (admin, admin_password, changed_what, in_to_pass , fk_racuni, add_date, from_ip, add_from_user, db_cluster, changed_by, changed_ip, changed_db_cluster)
SELECT admin, admin_password, '$changed_password' , '$ch_admin_new_pass' , fk_racuni, add_date, from_ip, add_from_user, db_cluster, '$admin', '$current_ip', '$global_database'
FROM korisnici
WHERE admin='$ch_admin_user';" pk_cluster
sleep 1

mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
UPDATE administrator
INNER JOIN korisnici ON (administrator.administrator_password = korisnici.admin_password)
SET administrator.administrator_password = '$ch_admin_new_pass', korisnici.admin_password = '$ch_admin_new_pass', administrator.last_update = CURRENT_TIMESTAMP, korisnici.last_update = CURRENT_TIMESTAMP
WHERE administrator.administrator = '$ch_admin_user' AND korisnici.admin = '$ch_admin_user';" pk_cluster
echo ""
echo "Success: New Password Name Is: $ch_admin_new_pass"
sleep 3
change_admin
fi
fi
fi
return

;;



3)

clear
echo ""
read -p "Please Enter Admin User Name: " ch_admin_user
echo ""
if [[ -z "$ch_admin_user" ]]; then
echo "$(tput setaf 1)Warnning: Please  Insert User Name$(tput sgr 0)"
sleep 3
change_admin
else
#Provjera da li postoji izabrani admiistrator za update
ch_admin_admin_1=$(mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
SELECT administrator FROM administrator WHERE administrator='$ch_admin_user';" pk_cluster)
if [[ "$ch_admin_admin_1" == "" ]]; then
echo "$(tput setaf 1)Warning: Selected Admin Account Does Not Exist$(tput sgr 0)"
sleep 4
change_admin
else
echo ""
read -p "$(tput setaf 2)Please Enter New Admin User Name:$(tput sgr 0) " ch_admin_new_name
echo ""
read -p "$(tput setaf 2)Please Enter New Admin Password:$(tput sgr 0) " ch_admin_new_pass

if [[ -z "$ch_admin_new_name" || -z "$ch_admin_new_pass" ]]; then
echo "$(tput setaf 1)Warning: Empty User Name / Password Not Allowed$(tput sgr 0)"
sleep 4
change_admin
else
#Prvo Dodajemo informacije azuriranog administratora iz baze korisnici u bazu: changed_admin, za arhivu
mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
INSERT INTO changed_admin (admin, admin_password, changed_what, in_to_user, in_to_pass , fk_racuni, add_date, from_ip, add_from_user, db_cluster, changed_by, changed_ip, changed_db_cluster)
SELECT admin, admin_password, '$changed_all' , '$ch_admin_new_name' , '$ch_admin_new_pass' , fk_racuni, add_date, from_ip, add_from_user, db_cluster, '$admin', '$current_ip', '$global_database'
FROM korisnici
WHERE admin='$ch_admin_user';" pk_cluster
sleep 1

mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
UPDATE administrator
INNER JOIN korisnici ON (administrator.administrator_password = korisnici.admin_password)
SET administrator.administrator = '$ch_admin_new_name', administrator.administrator_password = '$ch_admin_new_pass', korisnici.admin = '$ch_admin_new_name' , korisnici.admin_password = '$ch_admin_new_pass', administrator.last_update = CURRENT_TIMESTAMP, korisnici.last_update = CURRENT_TIMESTAMP
WHERE administrator.administrator = '$ch_admin_user' AND korisnici.admin = '$ch_admin_user';" pk_cluster
echo ""
echo "Success: New Admin User Name Is: $(tput setaf 2)$ch_admin_new_name$(tput sgr 0)"
echo ""
echo "Success: New Password  Is: $(tput setaf 2)$ch_admin_new_pass$(tput sgr 0)"

sleep 4
change_admin
fi
fi
fi
return
;;

4)
admin_area
return
;;
5)
admin_area_main
return
;;

0)
echo "$(tput setaf 1)Program Terminated$(tput sgr 0)"
sleep 1
mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
UPDATE admin_log SET  log_out = CURRENT_TIMESTAMP WHERE id = $current_log_session_id;" pk_cluster
exit 0
esac
else
echo "$(tput setaf 1)Invalid Entry$(tput sgr 0)"
sleep 2
fi
done
}

user_area_main(){
while true; do
clear
COLUMNS=$(tput cols)
title="$(tput setaf 6)CaksSonicDeveloper$(tput sgr 0)"
printf "%*s\n" $(((${#title}+$COLUMNS)/2)) "$title"
echo ""
title_1="$(tput setaf 6) PASSWORD KEEPER - USER  MENU$(tput sgr 0)"
printf "%*s\n" $(((${#title_1}+$COLUMNS)/2)) "$title_1"
echo ""

cat << _EOF_

Please Select:
 ______________________________________________________________________
|                                     |                                |  
| $(tput setaf 1)[1]$(tput sgr 0) List Users                      | $(tput setaf 1)[4]$(tput sgr 0) Search                     |
|                                     |                                |
| $(tput setaf 1)[2]$(tput sgr 0) Change User Name/Password       | $(tput setaf 1)[5]$(tput sgr 0) Return To Admin Main Menu  |
|                                     |                                |
| $(tput setaf 1)[3]$(tput sgr 0) Add/Remove User Account         |                                                            |
|                                     |                                |
|_____________________________________|________________________________|

0. $(tput setaf 1)Quit$(tput sgr 0) 
_EOF_
echo ""
read -p "Enter selection: [0-5] > "
echo ""

if [[ $REPLY =~ ^[0-5]$ ]]; then
case $REPLY in

1)
echo "List Users"
sleep 4
continue
;;
2)
echo "Change User Name/Password"
sleep 4
continue
;;
3)
echo "Add/Remove User Account"
sleep 4
continue
;;
4)
echo "Search"
sleep 3
continue
;;

5)
admin_area_main
return
;;
0)
echo "$(tput setaf 1)Program Terminated $(tput sgr 0) "
sleep 3
mysql -u "$db_user" -p"$db_pass" -h "$global_database" -P 3306 -e \ "
UPDATE admin_log SET  log_out = CURRENT_TIMESTAMP WHERE id = $current_log_session_id;" pk_cluster


exit 0
esac
else
echo "$(tput setaf 1)Invalid Entry$(tput sgr 0)"
sleep 2
fi
done
}



check_prerequisite
